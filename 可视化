#直方图看数值的分布
#散点图看数据之间的关系
@在jupyter notebook查看数据图
% matplotlib inline
#dataframe 和 series 对象都可以用绘图功能
#dataframe直方图
df.hist()
df.hist(figsize=(8,8));
#series直方图，就是某一列的图
df['age'].hist();
df['age'].plot(kind='hist');
#用value_counts函数汇总一列中每个唯一值的数量，然后画柱状图、饼状图
df['education'].value_counts().plot(kind = 'bar')
df['workclass'].value_counts().plot(kind = 'pie')
#出直方图和散点图很厉害的函数
pd.plotting.scatter_matrix(df);
#或直接用plot函数，画散点图
df.plot(x='',y='',kind='scatter');
df[''].plot(kind = 'box')
——————————————————————————————————————————————————————————————————————————————
#一个例子 看不懂
import matplotlib.pyplot as plt
% matplotlib inline
fig, ax = plt.subplots()
ax.hist(df_b['area'],alpha=0.5,label='benign')
ax.hist(df_m['area'],alpha=0.5,label='malignant')
ax.set_title('Distributions of Benign and Malignant Tumor Area')
ax.set_xlabel('Area')
ax.set_ylabel('Count')
ax.legend(loc='upper right')
plt.show()
————————————————————————————————————————————————————————————————————————
#收入分析例子
#分成5000以上和5000以下两组
df_a=df[df['income']=='>50K']
df_b=df[df['income']=='<=50K']
#用value_counts()返回值，图里会按值大小排序
df_a['education'].value_counts().plot(kind='bar')
#需要建立一个统一的index，这样对比图会比较好看
ind=df_a['education'].value_counts().index
df_a['education'].value_counts()[ind].plot(kind='bar')
df_b['education'].value_counts()[ind].plot(kind='bar')
