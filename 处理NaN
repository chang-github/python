# We create a list of Python dictionaries
items2 = [{'bikes': 20, 'pants': 30, 'watches': 35, 'shirts': 15, 'shoes':8, 'suits':45},
{'watches': 10, 'glasses': 50, 'bikes': 15, 'pants':5, 'shirts': 2, 'shoes':5, 'suits':7},
{'bikes': 20, 'pants': 30, 'watches': 35, 'glasses': 4, 'shoes':10}]
# We create a DataFrame  and provide the row index
store_items = pd.DataFrame(items2, index = ['store 1', 'store 2', 'store 3'])
# We display the DataFrame
store_items
        bikes	glasses	pants	shirts	shoes	suits	watches
store 1	20	  NaN   	30  	15.0	  8	    45.0	35
store 2	15	  50.0  	5	    2.0	    5   	7.0	  10
store 3	20	  4.0	    30  	NaN   	10	  NaN	  35

# We count the number of NaN values in store_items
x =  store_items.isnull()
	      bikes	glasses	pants	shirts	shoes	suits	watches
store 1	False	True	  False	False	  False	False	False
store 2	False	False	  False	False 	False	False	False
store 3	False	False	  False	True	  False	True	False

x =  store_items.isnull().sum()
bikes          0
glasses        1
pants          0
shirts         1
shoes          0
suits          1
watches        0
dtype: int64

x =  store_items.isnull().sum().sum()
3
________________________________________________
# We drop any rows with NaN values
store_items.dropna(axis = 0)
# We drop any columns with NaN values
store_items.dropna(axis = 1)
#在 dropna() 方法中将关键字 inplace 设为 True，在原地删除目标行或列。
_________________________________________________
使用 .fillna() 方法将所有 NaN 值替换为合适的值
# We replace all NaN values with 0
store_items.fillna(0)

#.fillna(method = 'ffill', axis) 将通过前向填充 (ffill) 方法沿着给定 axis 使用上个已知值替换 NaN 值。
# We replace NaN values with the previous value in the column
store_items.fillna(method = 'ffill', axis = 0)
# We replace NaN values with the previous value in the row
store_items.fillna(method = 'ffill', axis = 1)

#.fillna(method = 'backfill', axis) 将通过后向填充 (backfill) 方法沿着给定 axis 使用下个已知值替换 NaN 值
# We replace NaN values with the next value in the column
store_items.fillna(method = 'backfill', axis = 0)
#在 fillna() 函数中将关键字 inplace 设为 True，在原地替换 NaN 值。
______________________________________________________________
#.interpolate(method = 'linear', axis) 方法将通过 linear 插值使用沿着给定 axis 的值替换 NaN 值
# We replace NaN values by using linear interpolation using column values
store_items.interpolate(method = 'linear', axis = 0)
